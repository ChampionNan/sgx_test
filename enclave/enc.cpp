// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

#include <stdio.h>
#include <stdarg.h>
#include "../include/common.h"

// Include the trusted sgx_test header that is generated
// during the build. This file is generated by calling the
// sdk tool oeedger8r against the helloworld.edl file.
#include "sgx_test_t.h"

void printfE(const char *fmt, ...)
{
    char buf[BUFSIZ] = {'\0'};
    va_list ap;
    va_start(ap, fmt);
    vsnprintf(buf, BUFSIZ, fmt, ap);
    va_end(ap);
    ocall_print_string(buf);
}

// This is the function that the host calls. It prints
// a message in the enclave before calling back out to
// the host to print a message from there too.
void enclave_sgx_test(int *array, int size, int *array2, int size2)
{
    // Print a message from the enclave. Note that this
    // does not directly call fprintf, but calls into the
    // host and calls fprintf from there. This is because
    // the fprintf function is not part of the enclave
    // as it requires support from the kernel.
    printfE("Hello from the enclave!\n");
    EncOneBlock *a = (EncOneBlock *)array;
    int sum1 = 0, sum2 = 0;
    for (int i = 0; i < size2; ++i) {
      sum1 += a[array2[i]].sortKey;
      sum2 += a[array2[i]].primaryKey;
    }
    printfE("Host sum1: %d, sum2: %d\n", sum1, sum2);
    printfE("Enclave Address: %ld\n", array);
    return;
}